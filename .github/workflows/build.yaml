name: build

on:
  workflow_call:
    inputs:
      name:
        description: "Workflow name"
        type: string
        required: true
      imageRegistry:
        description: "Dockerhub image registry name"
        type: string
        required: true
      imageTags:
        description: "Image tags"
        type: string
        required: true
      dockerfilePath:
        description: "Path in which is stored the Dockerfile"
        type: string
        required: true
      buildTarget:
        description: "Target of the image build"
        type: string
        required: true
      buildArgs:
        description: "docker build arguments"
        type: string
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ inputs.imageRegistry }}
          tags: ${{ inputs.imageTags }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ inputs.dockerfilePath }}
          target: ${{ inputs.buildTarget }}
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: ${{ inputs.buildArgs }}
          outputs: type=image,name=${{ inputs.imageRegistry }},push-by-digest=true,name-canonical=true,push=true
      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"
      - name: Set sanitized platform
        run: echo "SANITIZED_PLATFORM=${{ matrix.platform }}" | sed 's/\//-/g' >> $GITHUB_ENV
      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ inputs.name }}-${{ env.SANITIZED_PLATFORM }}
          path: /tmp/digests/*
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Merge Artifacts
        uses: actions/upload-artifact/merge@v4
        with:
          name: digests-${{ inputs.name }}
          pattern: digests-${{ inputs.name }}-*
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          pattern: digests-${{ inputs.name }}
          path: /tmp/digests
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ inputs.imageRegistry }}
          tags: ${{ inputs.imageTags }}
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Create manifest list and push
        working-directory: /tmp/digests/digests-${{ inputs.name }}
        run: |
          docker buildx imagetools create \
          $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
          $(printf '${{ inputs.imageRegistry }}@sha256:%s ' *)
      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ inputs.imageRegistry }}:${{ steps.meta.outputs.version }}
